-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

8f71b17db5bc77c5cae520d49e7c6484d1a8312c54af2279f1b1226558d9976c  udevil-0.2.0.tar.xz
6200178ce4b9382de1354cf79fa4eb9883c6e634731b3d8c1226e291936fc819  udevil-0.2.0-installer.sh
2fd3731ea08e8ccdd593974803a125fa204a4605fbf45120a9d6f033d21402bb  udevil_0.2.0-1_all.deb

#
# This file (udevil-0.2.0.SHA256.asc) is used to authenticate download of
# udevil version 0.2.0
# 
# Homepage: http://ignorantguru.github.com/udevil/
# 
# 
# Why Authenticate?
# 
#   Verifying the authenticity of downloaded files prior to installation is
#   important to ensure that your download is not corrupt and that no one has
#   tampered with the server holding the files.
#
#
# 1) If you don't already have IgnorantGuru's CURRENT key on your keyring:
#
#   gpg --keyserver keys.gnupg.net --recv-keys 0x7977070A723C6CCB696C0B0227A5AC5A01937621
#     (if you receive an error, try again)
#     
#   Also visually verify that the given fingerprint matches the one shown here:
#     http://igurublog.wordpress.com/contact-ignorantguru/
#
#
# 2) Download one or more files (the first is required):
#
#   wget https://raw.github.com/IgnorantGuru/udevil/master/packages/0.2.0/udevil-0.2.0.SHA256.asc
#   wget https://raw.github.com/IgnorantGuru/udevil/master/packages/0.2.0/udevil-0.2.0.tar.xz
#   wget https://raw.github.com/IgnorantGuru/udevil/master/packages/0.2.0/udevil-0.2.0-installer.sh
#   wget https://raw.github.com/IgnorantGuru/udevil/master/packages/0.2.0/udevil_0.2.0-1_all.deb
#
#
# 3) Check signature and files:
#
#   gpg -d udevil-0.2.0.SHA256.asc | sha256sum --check
#
#   This should report a good signature and an OK for each file present:  
#
#     gpg: Signature made <SIGNATURE DATE> using DSA key ID 01937621    <--
# --> udevil-0.2.0.tar.xz: OK
# --> udevil-0.2.0-installer.sh: OK
# --> udevil_0.2.0-1_all.deb: OK
# --> gpg: Good signature from IgnorantGuru <EMAIL>
#     gpg: WARNING: This key is not certified with a trusted signature!
#     gpg:          There is no indication that the signature belongs to the owner.
#     sha256sum: WARNING: x lines are improperly formatted
#
#   If "BAD signature" or the wrong key ID is reported, or if FAILED appears
#   next to any file you plan to use, DO NOT USE the file.  A "key is not
#   certified" warning (shown above) is normal and can be safely ignored if
#   you visually verified the key fingerprint in step 1.
#
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iF4EAREIAAYFAk+71McACgkQJ6WsWgGTdiHzdwEAuuTXUUHsErbkXb/IT2sWkydu
1wXON/xNJVXqht31N+8A/jFGqAA+u+Ra62hXjvq/VeJEez5FeWluvPwgoVkxAdzC
=bTNP
-----END PGP SIGNATURE-----
